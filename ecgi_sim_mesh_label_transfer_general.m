
addpath(genpath('C:\Users\petnov\Dropbox\shared - copy\'));
addpath(genpath('C:\Users\petnov\Dropbox\mesh scripts'))
enableVTK;
pats={'06'};
    patient_nr=pats{1};
    %mkdir 'D:\ARVC meshing automatic\patients\patient01\regions';

    patient_sim_folder =  strcat('D:\ARVC meshing automatic\patients\patient',patient_nr,'\');

    %H0 = read_VTK( fullfile( TORSO_MODEL_DIR , 'HEART_with_UPS_louie.vtk' ) ); %this is louie's heart!
    H_mesh = read_CHASTE( strcat(patient_sim_folder,    'chaste',patient_nr,'\HEART'));
    H_mesh.xyz = H_mesh.xyz*10;
    %H0 = read_VTK('D:\ARVC meshing automatic\patients\patient09\ARVC09_ecgi_mesh.vtk'); %use the original ecgi mesh, not the clipped one!!
    %\H0 = read_VTK('D:\ARVC meshing automatic\patients\patient09\ecgi_clipped.vtk');
    if patient_nr(1)=='0'
        data = load(strcat('D:\ChrisReconstructions\ARVC',patient_nr(2),'\ARVC',patient_nr(2),'_Baseline.mat'));
    else
        data = load(strcat('D:\ChrisReconstructions\ARVC',patient_nr,'\ARVC',patient_nr,'_Baseline.mat'));
    end
        name = fieldnames(data);
    H0 =struct;
    H0.xyz = data.(name{1}).nodes;
    H0.tri = data.(name{1}).mesh;
   mapping=[0,7,8,5,6,3,4,1,2,10,9,17,18,15,16,13,14,11,12,20,19]+1;
    fields = fieldnames(data.(name{1}).labels);
        for i=1:size(fields,1)
            indices = data.(name{1}).labels.(fields{i,1});
                H0.xyzlabels([indices],1) = mapping(i);
        end

    %chaste works in cm, our meshes are built in mm (BE CAREFUL WHEN LOCATING
    %INDICES 



    %%

    H1 = read_VTK(  strcat('D:\ARVC meshing automatic\patients\patient',patient_nr,'\HEART.vtk')); %our target heart
    [EPI1,LV1,RV1,~,MAT1] = HEARTparts( H1 );
    % 
    % figure()
    % plotMESH( H0 ,'ne');
    % hplotMESH( H1 , 'ne' ,'FaceColor',[1 1 1]*0.6)
    % headlight; axis(objbounds);

    %HD_loaded = load('Z:\Dropbox\patients\HD.mat');

    %%

    u = loadv( strcat('D:\ARVC meshing automatic\patients\patient',patient_nr,'\mpp\Hmapping_ecgi') , 'u' ); %transfer matrix u
    %this is a function converting coordinates from H0 to H1
    %it is generated by running the mpp_Heart_Mapping Function of Ernesto s
    %pipeline!!


    %check if the two meshes are in the same units of length by plotting side
    %by side, if they are not, convert the ECGi or chaste mesh unit into mm
    %H0.xyz = H0.xyz*10;
% 
%     if 1
     HD = H0;
     HD.xyz = u( HD.xyz );
%     figure()
%     plotMESH( HD ,'ne','FaceColor',[0 0 1]*0.6);
%     hplotMESH( H1 , 'ne' ,'FaceColor',[1 0 0]*0.6)
%     headlight; axis(objbounds);
%     axis off
%     alpha(1)
%     end
% 

    EPI1 = Mesh(EPI1);

    %%
    %find the point in HD (ecgi mesh registered to the chaste mesh) corresponding to each of the nodes of thr chaste mesh 
    closest_points = vtkClosestPoint(   Mesh(H0) ,EPI1.xyz);

    epi_cell_property = H0.xyzlabels(closest_points);



    %check that the epicardial surface contains the expected fibrotic and scar
    %patterns
    % 
     figure()
     plotMESH( EPI1, 'edgecolor','none' , 'cdata' , epi_cell_property' ,'facecolor','interp' )
    % axis off
     headlight
    % hold on
    % plotMESH(LV1,'edgecolor','none' )
    % plotMESH(RV1,'edgecolor','none' )
    % alpha(0.3)
    %remove the valve plane label
    epi_cell_property(find(epi_cell_property ==1)) =0;

    labelled_epi = find(epi_cell_property>0);
    epi_nodes_not_labelled = find(epi_cell_property==0);

    [idx,dist] = knnsearch(EPI1.xyz(labelled_epi,:),EPI1.xyz(epi_nodes_not_labelled,:)); %find the index in labelled_all which is closesst to point in uncategorised indices 

    only_labelled = epi_cell_property(labelled_epi);

    epi_cell_property(epi_nodes_not_labelled) = only_labelled(idx);

        fid = fopen(strcat(patient_sim_folder,'epi_cell_label','.txt'),'w');
        fprintf(fid,'%d \n',[epi_cell_property'].');
        fclose(fid)

    figure()
    plotMESH(EPI1,'edgecolor','none','cdata',epi_cell_property,'facecolor','interp')
    colorbar
    %get rid of nodes on the valve plain
    closest_points = vtkClosestPoint(   Mesh(HD) ,EPI1.xyz);


    %give all of the nodes which are not part of the epicardium a 0 label

    mesh_cell_property = zeros(size(H_mesh.xyz,1),1);
    mesh_cell_property(1:size(epi_cell_property,1)) =epi_cell_property;


    %find the nodes in the RV1 (endocardium) which are 6.5mm or further from the
    %epicardium, call these septal nodes
    closest_indices_in_epi=vtkClosestPoint(Mesh(EPI1),RV1.xyz);
    vectors_epi_rv = EPI1.xyz(closest_indices_in_epi,:)-RV1.xyz;
    distances_rv_epi = sqrt(vectors_epi_rv(:,1).*vectors_epi_rv(:,1)+vectors_epi_rv(:,2).*vectors_epi_rv(:,2)+vectors_epi_rv(:,3).*vectors_epi_rv(:,3));
    septal_indices_rv = find(distances_rv_epi >6.5);
        distance= @(vec,vec1) ((vec(:,1)-vec1(:,1)).^2+(vec(:,2)-vec1(:,2)).^2+(vec(:,3)-vec1(:,3)).^2).^0.5;

    %call all nodes further than 6.5 mm from epi surface septal nodes
    closest_idx_in_epi=vtkClosestPoint(Mesh(EPI1),H_mesh.xyz*10);
    distances=distance(EPI1.xyz(closest_idx_in_epi,:),H_mesh.xyz*10);
    septal_nodes=find(distances>11.0);
    
    
    rv_labels = zeros(size(RV1.xyz,1),1);
    rv_labels(septal_indices_rv)=1;

    
    
    figure()
    headlight
    hold on
    patch('vertices',RV1.xyz,'faces',RV1.tri,'edgecolor','none','FaceVertexCData',rv_labels,'facecolor','interp')


    
    septal_indices_full_mesh = vtkClosestPoint(Mesh(H_mesh),RV1.xyz(septal_indices_rv,:));
    mesh_cell_property(septal_indices_full_mesh) =1;

    H_mesh.xyzlabels = mesh_cell_property;
    %now label the remaining nodes in the midmyocardium 
    labelled_indices = find(mesh_cell_property>0);

    nodes_not_labelled = find(H_mesh.xyzlabels ==0);


    [idx,dist] = knnsearch(H_mesh.xyz(labelled_indices,:),H_mesh.xyz(nodes_not_labelled,:)); %find the index in labelled_all which is closesst to point in uncategorised indices 


    H_mesh.xyzlabels(nodes_not_labelled) = mesh_cell_property(labelled_indices(idx));

    mesh_cell_property(nodes_not_labelled)=  mesh_cell_property(labelled_indices(idx));

    %write_VTK(H_mesh,'D:\ARVC meshing automatic\patients\patient05\pat05_labelled_ecgi.vtk','b');

    [~,idx] = sort(mesh_cell_property);
        
    
    %septum stuff below, not necessary for every patient
%     
%     nearestlv=vtkClosestPoint(Mesh(LV1),H_mesh.xyz(septal_nodes,:)*10);
%         nearestrv=vtkClosestPoint(Mesh(RV1),H_mesh.xyz(septal_nodes,:)*10);
%         
%         nearestEPI=vtkClosestPoint(Mesh(EPI1),H_mesh.xyz(septal_nodes,:)*10);
% 
% distlv=distance(LV1.xyz(nearestlv,:),H_mesh.xyz(septal_nodes,:)*10);
% distrv=distance(RV1.xyz(nearestrv,:),H_mesh.xyz(septal_nodes,:)*10);
% distepi=distance(EPI1.xyz(nearestEPI,:),H_mesh.xyz(septal_nodes,:)*10);
% for i=1:size(distlv,1)
%     if distrv(i) >= distepi(i) && distrv(i)*2>= distlv(i)
%         region_old(i)=1;
%     
%     else % distlv(i) >= distepi(i) && distlv(i) >=distrv(i)
%                 region_old(i)=2;
% 
%     end
%    if distepi(i)*2 >= distlv(i) && distepi(i) >=distrv(i)
% 
%         if distlv(i) < 2/3*(distlv(i)+distrv(i))
%             region_old(i)=3;
%         else
%             region_old(i)=4;
%         end
%     end
% 
% end

% 
%     septal_lv=septal_nodes(region_old==3);
%     septal_rv=septal_nodes(region_old==4);
%     
%     mesh_cell_property(septal_lv)=22;
%         mesh_cell_property(septal_rv)=23;
% 
%     H_mesh.xyzlabels(septal_lv)=22;
%         H_mesh.xyzlabels(septal_rv)=23;

    %save the coords of the different regions in separate files
    H_mesh.xyz = H_mesh.xyz/10;
    fields{1} = 'septum';
    % for i=1:size(unique(mesh_cell_property))-1
    %     ind=find(mesh_cell_property ==i-1);
    %     fid = fopen(strcat('D:\ARVC meshing automatic\patients\patient09\regions\',num2str(fields{i}),'.txt'),'w');
    %     fprintf(fid,'%d %d %d\n',[H_mesh.xyz(ind,:)].');
    %     fclose(fid)
    % end
    % 
      fid = fopen(strcat('D:\ARVC meshing automatic\patients\patient',patient_nr,'\','regions_labelled','.txt'),'w');
        fprintf(fid,'%5.0f \n',[mesh_cell_property].');
        fclose(fid)
    % 
    % 
%     
%     cell_regions=load(strcat('D:\ARVC meshing automatic\patients\patient',patient_nr,'\','regions_labelled','.txt'));
%         
%     
%     fileID=fopen(strcat('D:\ARVC meshing automatic\patients\patient',pats{1},'\','septal_fib.csv'));
%     formatSpec='%d %d %f %f %f';
%     delimiter=',';
%      data = textscan(fileID, formatSpec ,'Delimiter', delimiter, 'HeaderLines', 1, 'ReturnOnError', false);
% 
%     septal_lv_endo=data{2}+1;
%     septum=find(cell_regions==1);
%     nearest=vtkClosestPoint(Mesh(H_mesh.xyz(septal_lv_endo,:)),H_mesh.xyz(septum,:));
%     dists=distance(H_mesh.xyz(septal_lv_endo(nearest),:),H_mesh.xyz(septum,:));
%     fib_lv_sept=find(dists<0.5);
%     
%     indices_lv_fib_anteriror= septum(fib_lv_sept);
%    cell_regions(indices_lv_fib_anteriror)=22;
   
%    
%    
%    indices_lv_fib_posterior=[];
%     fileID=fopen(strcat('D:\ARVC meshing automatic\patients\patient',pats{1},'\','fib_posterior_septum.csv'));
%     formatSpec='%d %d %f %f %f';
%     delimiter=',';
%      fib_posterior_sept = textscan(fileID, formatSpec ,'Delimiter', delimiter, 'HeaderLines', 1, 'ReturnOnError', false);
%   fib_posterior_sept=fib_posterior_sept{1};
%   
%   
%     septum=find(cell_regions==1);
%     nearest=vtkClosestPoint(Mesh(H_mesh.xyz(fib_posterior_sept,:)),H_mesh.xyz(septum,:));
%     dists=distance(H_mesh.xyz(fib_posterior_sept(nearest),:),H_mesh.xyz(septum,:));
%     fib_lv_sept=find(dists<0.7);
%     
%     indices_lv_fib_posterior= septum(fib_lv_sept);
%     cell_regions(indices_lv_fib_posterior)=23;
%       
%       
    figure()
    headlight
    hold on
    patch('vertices',H_mesh.xyz,'faces',H_mesh.face,'edgecolor','none','FaceVertexCData',cell_regions,'facecolor','interp')
    colorbar
    
    %now save values for the conductivities scaling factors, assuming a linear
    %rel between LGE intensity and conductivity of tissue (max CV reduction at
    %50% LGEwhere CV is halved (conductivity is divided by 4).Assume
    %conductivities change equally in the 3 fiber directions
    cond =@(x) -0.011*x+1.0;
        cond5= @(x) -0.0125*x+1.0;
    cond6= @(x) -0.014*x+1.0;
    cond7=@(x) -0.016*x+1.0;
    startRow = 2;

    [GadLV,GadRV] = read_csv('D:\sim3d\late_gad.csv', startRow);
     GadRV = str2double(GadRV);
    % GadRV(92) = 73;
    % GadRV(94) = 76;
    % GadRV(96) = 70;
    % GadRV(99) = 73;
    
    patient_nr_str=patient_nr;
    if patient_nr(1) =='0' ==0
        patient_nr=str2double(patient_nr);
    else
        patient_nr= str2double(patient_nr(2));

    end
    regional_cond_lv =[];
    CV_scaling=ones(23,1);
    sodium_cells = ones(size(H_mesh.xyz,1),1);
        for i=1:20
            j=i+20*(patient_nr-1);
            if isnan(str2double(GadLV{j})) ==0
                 regional_cond_lv(j-20*(patient_nr-1)+1) = cond5(str2double(GadLV{j}));
                 if(GadLV{j}==0)
                    CV_scaling(j-20*(patient_nr-1)+1) = 1;
                 else
                      CV_scaling(j-20*(patient_nr-1)+1) = sqrt(cond(str2double(GadLV{j})));
                 end

            elseif GadRV(j) >0
                regional_cond_lv(j-20*(patient_nr-1)+1) = cond5(GadRV(j)*100/3);
                CV_scaling(j-20*(patient_nr-1)+1) =sqrt(cond(GadRV(j)*100/3));

            else
                  regional_cond_lv(j-20*(patient_nr-1)+1)=1.000;
                  CV_scaling(j-20*(patient_nr-1)+1)=1.000;

            end
            if isnan( regional_cond_lv(j-20*(patient_nr-1))+1) ==1
                regional_cond_lv(j-20*(patient_nr-1)+1)=1.0;
                CV_scaling(j-20*(patient_nr-1)+1)=1.0;
                
            end
            regional_cond_lv(1) =1; %septum late gad info is not present
            CV_scaling(1) =1; %septum late gad info is not present

    %         fid = fopen(strcat('D:\ARVC meshing automatic\patients\patient05\conductivities\',num2str(Label{j}),'.txt'),'w');
    %         fprintf(fid,'%d',regional_cond_lv(i));
    %         fclose(fid)
        end
% %   
%   regional_cond_lv(22)=0.5;
%     regional_cond_lv(23)=0.5;
% 
%         CV_scaling(find(strcmp(fields,'septum')))=1.0;
%         CV_scaling(22)=0.55;
%         CV_scaling(23)=0.55;

    ts_scaling=1.0./CV_scaling;

    
         
    figure()
    headlight
    hold on
    patch('vertices',H_mesh.xyz,'faces',H_mesh.face,'edgecolor','none','FaceVertexCData',ts_scaling(cell_regions(:,1)),'facecolor','interp')
    colorbar
    
    figure()
    hold on
        plot(1:100,sqrt(cond(1:100)),'b','LineWidth',3)
   plot(1:100,sqrt(cond5(1:100)),'r','LineWidth',3)
    plot(1:100,sqrt(cond6(1:100)),'m','LineWidth',3)
    plot(1:100,sqrt(cond7(1:100)),'k','LineWidth',3)
% 
%     scatter(1:56,1*ones(56,1),210,'filled')
%     scatter(56:60,0.8*ones(5,1),210,'filled')
%     scatter(60:64,0.6*ones(5,1),210,'filled')
%     scatter(64:100,0.4*ones(37,1),210,'filled')
    xlabel('LGE intensity %')
    ylabel('CV scaling')
    set(gca,'FontSize',21)
    legend('light','intermediate','strong','very strong','FontSize',21);
    %save the coords of regions in the same file and save a number
    %corresponding to the region number next to it
        fid = fopen(strcat(patient_sim_folder,'regions_full_strong_lv_sept_int','.txt'),'w');
        fprintf(fid,'%d %d \n',[regional_cond_lv(cell_regions(:,1))' sodium_cells(cell_regions(:,1))].');
        fclose(fid)
        dlmwrite(strcat(patient_sim_folder,'eikonal06_fine_nodeScaling_3f','.csv'),[ts_scaling(cell_regions(:,1))'].');
fib=dlmread(strcat(patient_sim_folder,'regions_full_light','.txt'));
fib1=dlmread(strcat(patient_sim_folder,'regions_full_intermediate','.txt'));
fib2=dlmread(strcat(patient_sim_folder,'regions_full_strong','.txt'));
fib3=dlmread(strcat(patient_sim_folder,'regions_full_very_strong','.txt'));

figure()
hold on
scatter(1:size(unique(fib)),sqrt(unique(fib)),105,'r','filled')
scatter(1:size(unique(fib1)),sqrt(unique(fib1)),105,'m','filled')
scatter(1:size(unique(fib2)),sqrt(unique(fib2)),105,'b','filled')
scatter(1:size(unique(fib3)),sqrt(unique(fib3)),105,'k','filled')

xlabel('region id','FontSize',21)
ylabel('CV scaling','FontSize',21)
set(gca,'FontSize',21)
legend('LGE light','LGE intermediate','LGE strong','LGE very strong');



scaling=csvread(strcat(patient_sim_folder,'eikonal06_fine_nodeScaling','.csv'));
H_mesh.xyzScaling=scaling;
H_mesh.xyzFib=fib(:,1);
H_mesh.celltype=10;
msh=struct;
msh.tri=H_mesh.tri;
msh.xyz=H_mesh.xyz;
msh.xyzRegions=cell_regions;
msh.xyzFib=ts_scaling(cell_regions(:,1));

msh.celltype=10;
%write_VTK(msh,strcat(patient_sim_folder,'regions_sept','.vtk'),'binary');
% 
% H_mesh.xyzlabels = mesh_cell_property;
% write_VTK(H_mesh,strcat('D:\ARVC meshing automatic\patients\patient',patient_nr_str,'\sim_mesh_labelled.vtk'),'binary')
